package internal.org.springframework.content.jpa.io;

import org.springframework.content.jpa.io.BlobResourceLoader;
import org.springframework.core.io.Resource;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.transaction.PlatformTransactionManager;
import org.springframework.util.ClassUtils;

public class PostgresBlobResourceLoader implements BlobResourceLoader {

    private JdbcTemplate template;
    private PlatformTransactionManager txnMgr;

    public PostgresBlobResourceLoader(JdbcTemplate template, PlatformTransactionManager txnMgr) {
        this.template = template;
        this.txnMgr = txnMgr;
    }

    @Override
    public String getDatabaseName() {
        return "PostgreSQL";
    }

    @Override
    public Resource getResource(String location) {
        updateSchema();
        return new PostgresBlobResource(location, template, txnMgr);
    }

    private void updateSchema() {
        template.execute("IF NOT EXISTS(SELECT NULL FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'BLOBS') " +
                "CREATE TABLE BLOBS " +
                "(id INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1), " +
                " blob BLOB, " +
                " PRIMARY KEY ( id ))");
    }

    @Override
    public ClassLoader getClassLoader() {
        return ClassUtils.getDefaultClassLoader();
    }
}
