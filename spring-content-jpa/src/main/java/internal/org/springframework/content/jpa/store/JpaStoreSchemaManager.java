package internal.org.springframework.content.jpa.store;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.dao.DataAccessException;
import org.springframework.jdbc.core.ConnectionCallback;
import org.springframework.jdbc.core.JdbcTemplate;

import javax.sql.DataSource;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

public class JpaStoreSchemaManager {

    private static Log logger = LogFactory.getLog(JpaStoreSchemaManager.class);

    private final DataSource ds;
    private JdbcTemplate template;

    public JpaStoreSchemaManager(DataSource ds) {
        this.ds = ds;
        this.template = new JdbcTemplate(ds);
    }

    public void create() {
        this.template.execute(new ConnectionCallback<Integer>() {

            @Override
            public Integer doInConnection(Connection con) throws SQLException, DataAccessException {
                ResultSet rs = null;
                Statement stmt = null;
                try {
                    rs = con.getMetaData().getTables(null, null, "BLOBS", new String[] {"TABLE"});
                    if (!rs.next()) {
                        logger.info("Creating JPA BLOB Store");

                        stmt = con.createStatement();
                        String sql = "CREATE TABLE BLOBS " +
                                "(id INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1), " +
                                " blob BLOB, " +
                                " PRIMARY KEY ( id ))";

                        return stmt.executeUpdate(sql);
                    }
                } finally {
                    if (stmt != null) {
                        stmt.close();
                    }
                    if (rs != null) {
                        rs.close();
                    }
                }
                return null;
            }
        });

    }

}
